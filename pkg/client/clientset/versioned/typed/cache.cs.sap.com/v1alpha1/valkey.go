/*
SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company and valkey-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	cachecssapcomv1alpha1 "github.com/jaroslav-viravec/valkey-operator/api/v1alpha1"
	scheme "github.com/jaroslav-viravec/valkey-operator/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ValkeyGetter has a method to return a ValkeyInterface.
// A group's client should implement this interface.
type ValkeyGetter interface {
	Valkey(namespace string) ValkeyInterface
}

// ValkeyInterface has methods to work with Valkey resources.
type ValkeyInterface interface {
	Create(ctx context.Context, valkey *cachecssapcomv1alpha1.Valkey, opts v1.CreateOptions) (*cachecssapcomv1alpha1.Valkey, error)
	Update(ctx context.Context, valkey *cachecssapcomv1alpha1.Valkey, opts v1.UpdateOptions) (*cachecssapcomv1alpha1.Valkey, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, valkey *cachecssapcomv1alpha1.Valkey, opts v1.UpdateOptions) (*cachecssapcomv1alpha1.Valkey, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*cachecssapcomv1alpha1.Valkey, error)
	List(ctx context.Context, opts v1.ListOptions) (*cachecssapcomv1alpha1.ValkeyList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *cachecssapcomv1alpha1.Valkey, err error)
	ValkeyExpansion
}

// valkey implements ValkeyInterface
type valkey struct {
	*gentype.ClientWithList[*cachecssapcomv1alpha1.Valkey, *cachecssapcomv1alpha1.ValkeyList]
}

// newValkey returns a Valkey
func newValkey(c *CacheV1alpha1Client, namespace string) *valkey {
	return &valkey{
		gentype.NewClientWithList[*cachecssapcomv1alpha1.Valkey, *cachecssapcomv1alpha1.ValkeyList](
			"valkey",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *cachecssapcomv1alpha1.Valkey { return &cachecssapcomv1alpha1.Valkey{} },
			func() *cachecssapcomv1alpha1.ValkeyList { return &cachecssapcomv1alpha1.ValkeyList{} },
		),
	}
}
